basePath: /v1
definitions:
  models.AddHoltelImage:
    properties:
      hotel_id:
        type: integer
      id:
        type: integer
      room_url:
        type: string
      sequence_number:
        type: integer
    type: object
  models.AddRoom:
    properties:
      hotel_id:
        type: integer
      image_url:
        type: string
      is_active:
        type: boolean
      price_for_adults:
        type: number
      price_for_children:
        type: number
      room_type:
        type: string
    type: object
  models.AddRoomImage:
    properties:
      hotel_id:
        type: integer
      id:
        type: integer
      room_id:
        type: integer
      room_url:
        type: string
      sequence_number:
        type: integer
    type: object
  models.AuthResponse:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_image_url:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  models.Comment:
    properties:
      created_at:
        type: string
      description:
        type: string
      hotel_id:
        type: integer
      id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserProfile'
      user_id:
        type: integer
    type: object
  models.CreateAddHotelImage:
    properties:
      hotel_id:
        type: integer
      room_url:
        type: string
      sequence_number:
        type: integer
    type: object
  models.CreateAddRoomImage:
    properties:
      hotel_id:
        type: integer
      room_id:
        type: integer
      room_url:
        type: string
      sequence_number:
        type: integer
    type: object
  models.CreateComment:
    properties:
      description:
        type: string
      hotel_id:
        type: integer
    type: object
  models.CreateHotel:
    properties:
      address:
        type: string
      email:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.CreateOrUpdateLikeRequest:
    properties:
      hotel_id:
        type: integer
      status:
        type: boolean
    required:
    - hotel_id
    type: object
  models.CreateOrder:
    properties:
      adults_count:
        type: integer
      children_count:
        type: integer
      date_first:
        type: string
      days:
        type: integer
      hotel_id:
        type: integer
      room_id:
        type: integer
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.GetAllCommentsResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      count:
        type: integer
    type: object
  models.GetAllHotelsResponse:
    properties:
      count:
        type: integer
      hotels:
        items:
          $ref: '#/definitions/models.HotelAll'
        type: array
    type: object
  models.GetAllUsersResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.GetRoomReq:
    properties:
      hotel_id:
        type: integer
      id:
        type: integer
    type: object
  models.Hotel:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      price:
        type: number
      rating:
        type: number
      room:
        items:
          $ref: '#/definitions/models.Room'
        type: array
      rooms_count:
        type: integer
    type: object
  models.HotelAll:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      price:
        type: number
      rating:
        type: number
      rooms_count:
        type: integer
    type: object
  models.Like:
    properties:
      hotel_id:
        type: integer
      id:
        type: integer
      status:
        type: boolean
      user_id:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Order:
    properties:
      adults_count:
        type: integer
      children_count:
        type: integer
      date_first:
        type: string
      date_last:
        type: string
      days:
        type: integer
      hotel_id:
        type: integer
      id:
        type: integer
      room_id:
        type: integer
      summa:
        type: number
      user_id:
        type: integer
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 30
        minLength: 2
        type: string
      last_name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      type:
        default: user
        enum:
        - superadmin
        - user
        - admin
        type: string
      username:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - type
    - username
    type: object
  models.ResponseOK:
    properties:
      message:
        type: string
    type: object
  models.Room:
    properties:
      hotel_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      is_active:
        type: boolean
      price_for_adults:
        type: number
      price_for_children:
        type: number
      room_type:
        type: string
    type: object
  models.RoomInfo:
    properties:
      hotel_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      images:
        items:
          $ref: '#/definitions/models.AddRoomImage'
        type: array
      is_active:
        type: boolean
      price_for_adults:
        type: number
      price_for_children:
        type: number
      room_type:
        type: string
    type: object
  models.UpdateComment:
    properties:
      created_at:
        type: string
      description:
        type: string
      hotel_id:
        type: integer
      id:
        type: integer
      updated_at:
        type: string
    type: object
  models.UpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_image_url:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  models.UserProfile:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      profile_image_url:
        type: string
    type: object
  models.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a blog service api.
  title: Swagger for blog api
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Forgot password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a user
      tags:
      - auth
  /auth/update-password:
    post:
      consumes:
      - application/json
      description: Update password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update password
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Verify user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify user
      tags:
      - auth
  /auth/verify-forgot-password:
    post:
      consumes:
      - application/json
      description: Verify forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify forgot password
      tags:
      - auth
  /comments:
    get:
      consumes:
      - application/json
      description: Get all comments
      parameters:
      - in: query
        name: hotel_id
        type: integer
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - default: desc
        enum:
        - asc
        - desc
        in: query
        name: sort_by_date
        required: true
        type: string
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCommentsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all comments
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create a comment
      parameters:
      - description: comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CreateComment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a comment
      tags:
      - comments
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a comment
      tags:
      - comments
    get:
      consumes:
      - application/json
      description: Get comment by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get comment by id
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update a comments
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.UpdateComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a comment
      tags:
      - comments
  /file-upload:
    post:
      consumes:
      - application/json
      description: File upload
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: File upload
      tags:
      - file-upload
  /hotels:
    get:
      consumes:
      - application/json
      description: Get all Hotels
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: sort_by_price
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllHotelsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all Hotels
      tags:
      - hotels
    post:
      consumes:
      - application/json
      description: Create a Hotel
      parameters:
      - description: Hotel
        in: body
        name: Hotel
        required: true
        schema:
          $ref: '#/definitions/models.CreateHotel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateHotel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a Hotel
      tags:
      - hotels
  /hotels/{id}:
    get:
      consumes:
      - application/json
      description: Get Hotel by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Hotel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get Hotel by id
      tags:
      - hotels
  /hotels/add-hotels-images:
    post:
      consumes:
      - application/json
      description: Add a hotels Images
      parameters:
      - description: CreateAddHotelImage
        in: body
        name: CreateAddHotelImage
        required: true
        schema:
          $ref: '#/definitions/models.CreateAddHotelImage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AddHoltelImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a hotels Images
      tags:
      - hotels
  /hotels/add-room:
    post:
      consumes:
      - application/json
      description: Add a room
      parameters:
      - description: AddRoom
        in: body
        name: AddRoom
        required: true
        schema:
          $ref: '#/definitions/models.AddRoom'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Add a room
      tags:
      - hotels
  /hotels/add-rooms-images:
    post:
      consumes:
      - application/json
      description: Add a rooms Images
      parameters:
      - description: AddRoomImage
        in: body
        name: AddRoomImage
        required: true
        schema:
          $ref: '#/definitions/models.CreateAddRoomImage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AddRoomImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a rooms Images
      tags:
      - hotels
  /likes:
    post:
      consumes:
      - application/json
      description: Create or update like
      parameters:
      - description: like
        in: body
        name: like
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrUpdateLikeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Like'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create or update like
      tags:
      - like
  /likes/user-post:
    get:
      consumes:
      - application/json
      description: Get like by user and post
      parameters:
      - description: Post ID
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Like'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get like by user and post
      tags:
      - like
  /orders:
    post:
      consumes:
      - application/json
      description: Create a order
      parameters:
      - description: CreateOrder
        in: body
        name: CreateOrder
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a order
      tags:
      - order
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - order
  /rooms:
    post:
      consumes:
      - application/json
      description: Get room by id
      parameters:
      - description: GetRoomReq
        in: body
        name: GetRoomReq
        required: true
        schema:
          $ref: '#/definitions/models.GetRoomReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoomInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get room by id
      tags:
      - hotels
  /users:
    get:
      consumes:
      - application/json
      description: Get all Users
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: sort_by_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a userss
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
